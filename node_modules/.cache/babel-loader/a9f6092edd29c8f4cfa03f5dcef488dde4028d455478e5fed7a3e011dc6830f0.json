{"ast":null,"code":"import React, { useState, useEffect, useRef } from \"react\";\nconst UseRefHook = () => {\n  // let inputRef = useRef(null)\n\n  // const handleClick = () => {\n  //     console.log('useRef call')\n\n  //     inputRef.current.value = '1000'\n  // inputRef.current.focus()\n  // inputRef.current.style.color = 'red'\n  // inputRef.current.style.display = 'none'\n  // }\n\n  // return (\n  //     <div>\n  //         <input type='text' ref={inputRef}/>\n  //         <button onClick={handleClick}>Update</button>\n  //     </div>\n  // )\n\n  // const [count, setCount] = useState(0);\n  // let prevCountRef = useRef()\n\n  // useEffect(() => {\n  //     console.log('count update')\n  //     prevCountRef.current = count\n  // }, [count]);\n\n  // const handleClick = () => {\n  //     setCount(count + 1)\n  // }\n\n  // return (\n  //     <div>\n  //         <h1>UseRef Hook</h1>\n  //         <p>Count: {count}</p>\n  //         <p>prevCount: {prevCountRef.current}</p>\n  //         <button onClick={handleClick}>Increment</button>\n  //     </div>\n  // )\n\n  // const [time, setTime] = useState(0)\n\n  // let timeRef = useRef(null)\n\n  // const handleStart = () => {\n  //     timeRef.current = setInterval(() => {\n  //         setTime(time => time + 1)\n  //     }, 1000);\n  // }\n\n  // const handleStop = () => {\n  //     clearInterval(timeRef.current)\n  //     timeRef.current = null\n  // }\n\n  // const handleReset = () => {\n  //     handleStop()\n  //     setTime(0)\n  // }\n\n  // return (\n  //     <div>\n  //         <h2>Timer: {time} second</h2>\n  //         <button onClick={handleStart}>Start</button>\n  //         <button onClick={handleStop}>Stop</button>\n  //         <button onClick={handleReset}>Reset</button>\n  //     </div>\n  // )\n};\n_c = UseRefHook;\nexport default UseRefHook;\nvar _c;\n$RefreshReg$(_c, \"UseRefHook\");","map":{"version":3,"names":["React","useState","useEffect","useRef","UseRefHook","_c","$RefreshReg$"],"sources":["/Users/krupachovatiya/Desktop/react/my_app/src/UseRefHook.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\n\nconst UseRefHook = () => {\n    // let inputRef = useRef(null)\n\n    // const handleClick = () => {\n    //     console.log('useRef call')\n\n    //     inputRef.current.value = '1000'\n        // inputRef.current.focus()\n        // inputRef.current.style.color = 'red'\n        // inputRef.current.style.display = 'none'\n    // }\n\n    // return (\n    //     <div>\n    //         <input type='text' ref={inputRef}/>\n    //         <button onClick={handleClick}>Update</button>\n    //     </div>\n    // )\n\n\n\n    // const [count, setCount] = useState(0);\n    // let prevCountRef = useRef()\n\n    // useEffect(() => {\n    //     console.log('count update')\n    //     prevCountRef.current = count\n    // }, [count]);\n\n    // const handleClick = () => {\n    //     setCount(count + 1)\n    // }\n\n    // return (\n    //     <div>\n    //         <h1>UseRef Hook</h1>\n    //         <p>Count: {count}</p>\n    //         <p>prevCount: {prevCountRef.current}</p>\n    //         <button onClick={handleClick}>Increment</button>\n    //     </div>\n    // )\n\n\n    // const [time, setTime] = useState(0)\n\n    // let timeRef = useRef(null)\n\n    // const handleStart = () => {\n    //     timeRef.current = setInterval(() => {\n    //         setTime(time => time + 1)\n    //     }, 1000);\n    // }\n\n    // const handleStop = () => {\n    //     clearInterval(timeRef.current)\n    //     timeRef.current = null\n    // }\n\n    // const handleReset = () => {\n    //     handleStop()\n    //     setTime(0)\n    // }\n\n    // return (\n    //     <div>\n    //         <h2>Timer: {time} second</h2>\n    //         <button onClick={handleStart}>Start</button>\n    //         <button onClick={handleStop}>Stop</button>\n    //         <button onClick={handleReset}>Reset</button>\n    //     </div>\n    // )\n}\n\nexport default UseRefHook"],"mappings":"AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AAExD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB;;EAEA;EACA;;EAEA;EACI;EACA;EACA;EACJ;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAIA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACH;AAAAC,EAAA,GAvEKD,UAAU;AAyEhB,eAAeA,UAAU;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}