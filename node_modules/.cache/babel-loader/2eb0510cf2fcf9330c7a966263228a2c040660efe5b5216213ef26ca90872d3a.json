{"ast":null,"code":"var _jsxFileName = \"/Users/krupachovatiya/Desktop/react/my_app/src/WordCount.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WordCount = () => {\n  _s();\n  const [word, setWord] = useState('');\n  const [isSaved, setIsSaved] = useState(false);\n  useEffect(() => {\n    console.log('word', word);\n    if (!word) {\n      return;\n    }\n    setIsSaved(false);\n    const timer = () => {\n      setTimeout(() => {\n        setIsSaved(true);\n      }, 2000);\n    };\n  }, [word]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: word,\n      onChange: e => setWord(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", word.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(WordCount, \"Z0uzF5SWqy/ghrN6wVZrrruLv+g=\");\n_c = WordCount;\nexport default WordCount;\nvar _c;\n$RefreshReg$(_c, \"WordCount\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WordCount","_s","word","setWord","isSaved","setIsSaved","console","log","timer","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","length","_c","$RefreshReg$"],"sources":["/Users/krupachovatiya/Desktop/react/my_app/src/WordCount.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst WordCount = () => {\n  const [word, setWord] = useState('')\n  const [isSaved, setIsSaved] = useState(false)\n\n  useEffect(() => {\n    console.log('word', word)\n\n    if (!word) {\n      return\n    }\n\n    setIsSaved(false)\n\n    const timer = () => {\n      setTimeout(() => {\n        setIsSaved(true)\n      }, 2000);\n    }\n  }, [word]);\n   \n  return (\n    <div>\n      <h1>Word Count</h1>\n      <input type='text' value={word} onChange={(e) => setWord(e.target.value)}/>\n      <p>Count: {word.length}</p>\n      <></>\n    </div>\n  )\n}\n\nexport default WordCount\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEL,IAAI,CAAC;IAEzB,IAAI,CAACA,IAAI,EAAE;MACT;IACF;IAEAG,UAAU,CAAC,KAAK,CAAC;IAEjB,MAAMG,KAAK,GAAGA,CAAA,KAAM;MAClBC,UAAU,CAAC,MAAM;QACfJ,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;EACH,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEd,IAAK;MAACe,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3EjB,OAAA;MAAAa,QAAA,GAAG,SAAO,EAACR,IAAI,CAACkB,MAAM;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BjB,OAAA,CAAAE,SAAA,mBAAI,CAAC;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAb,EAAA,CA5BKD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AA8Bf,eAAeA,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}