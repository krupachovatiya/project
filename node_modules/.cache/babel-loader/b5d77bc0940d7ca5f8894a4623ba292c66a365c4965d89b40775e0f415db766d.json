{"ast":null,"code":"var _jsxFileName = \"/Users/krupachovatiya/Desktop/React-Project/react/my_app/src/PostApi.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostApi = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const handleSubmit = () => {\n    // console.log({title, body});\n    let data = {\n      title,\n      body\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => {\n      console.log('Result: ', result);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"POST API Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Body\",\n      value: body,\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PostApi, \"qwG1af4LOHAgcSQ+L8KuMt9FIzc=\");\n_c = PostApi;\nexport default PostAPI;\nvar _c;\n$RefreshReg$(_c, \"PostApi\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PostApi","_s","title","setTitle","body","setBody","handleSubmit","data","fetch","method","headers","JSON","stringify","then","result","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","onClick","_c","PostAPI","$RefreshReg$"],"sources":["/Users/krupachovatiya/Desktop/React-Project/react/my_app/src/PostApi.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst PostApi = () => {\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n\n    const handleSubmit = () => {\n        // console.log({title, body});\n        let data = {title, body}\n        fetch('https://jsonplaceholder.typicode.com/posts', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        }).then((result) => {\n            console.log('Result: ', result)\n        })\n    }\n\n    return (\n    <div>\n        <h1>POST API Method</h1>\n        <textarea placeholder='Title' value={title} onChange={(e) => setTitle(e.target.value)}/>\n        <br/><br/>\n        <textarea placeholder='Body' value={body} onChange={(e) => setBody(e.target.value)}/>\n        <br/><br/>\n        <button type='submit' onClick={handleSubmit}>Submit</button>\n    </div>\n  )\n}\n\nexport default PostAPI"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA,IAAIC,IAAI,GAAG;MAACL,KAAK;MAAEE;IAAI,CAAC;IACxBI,KAAK,CAAC,4CAA4C,EAAE;MAChDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDN,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACL,IAAI;IAC7B,CAAC,CAAC,CAACM,IAAI,CAAEC,MAAM,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,MAAM,CAAC;IACnC,CAAC,CAAC;EACN,CAAC;EAED,oBACAf,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBtB,OAAA;MAAUuB,WAAW,EAAC,OAAO;MAACC,KAAK,EAAErB,KAAM;MAACsB,QAAQ,EAAGC,CAAC,IAAKtB,QAAQ,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxFtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAAAtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACVtB,OAAA;MAAUuB,WAAW,EAAC,MAAM;MAACC,KAAK,EAAEnB,IAAK;MAACoB,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrFtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAAAtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACVtB,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEtB,YAAa;MAAAW,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAApB,EAAA,CA7BKD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA+Bb,eAAe8B,OAAO;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}