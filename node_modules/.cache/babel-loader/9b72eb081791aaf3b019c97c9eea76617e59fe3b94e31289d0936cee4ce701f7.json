{"ast":null,"code":"var _jsxFileName = \"/Users/krupachovatiya/Desktop/react/my_app/src/EffectTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EffectTimer = () => {\n  _s();\n  const [time, setTime] = useState(2 * 60);\n  useEffect(() => {\n    if (time <= 0) {\n      return;\n    }\n    setTimeout(() => {\n      setTime(time - 1);\n    }, 1000);\n  }, [time]);\n\n  // const timeFormate = (seconds) => {\n  //     let min = Math.floor(seconds / 60)\n  //     let sec = seconds % 60\n\n  //     if (min < 10) {\n  //         min = '0'+ min\n  //     }\n\n  //     if (sec < 10) {\n  //         sec = '0'+ sec\n  //     }\n\n  //     return `${min} : ${sec}`\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(EffectTimer, \"nMU5cb1vNH8RJ7Mb1PBBiMkfnaM=\");\n_c = EffectTimer;\nexport default EffectTimer;\nvar _c;\n$RefreshReg$(_c, \"EffectTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","EffectTimer","_s","time","setTime","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/krupachovatiya/Desktop/react/my_app/src/EffectTimer.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst EffectTimer = () => {\n    const [time, setTime] = useState(2*60)\n\n    useEffect(() => {\n        if (time <= 0) {\n            return\n        }\n\n        setTimeout(() => {\n            setTime(time - 1)\n        }, 1000);\n    }, [time])\n\n    // const timeFormate = (seconds) => {\n    //     let min = Math.floor(seconds / 60)\n    //     let sec = seconds % 60\n\n    //     if (min < 10) {\n    //         min = '0'+ min\n    //     }\n\n    //     if (sec < 10) {\n    //         sec = '0'+ sec\n    //     }\n\n    //     return `${min} : ${sec}`\n    // }\n\n  return (\n    <div>\n      <h1>Timer</h1>\n      <></>\n      {/* <p>{timeFormate(time)}</p> */}\n    </div>\n  )\n}\n\nexport default EffectTimer\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,GAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,IAAIO,IAAI,IAAI,CAAC,EAAE;MACX;IACJ;IAEAE,UAAU,CAAC,MAAM;MACbD,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAEV;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEF,oBACEL,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdZ,OAAA,CAAAE,SAAA,mBAAI,CAAC;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEV,CAAC;AAAAR,EAAA,CAnCKD,WAAW;AAAAU,EAAA,GAAXV,WAAW;AAqCjB,eAAeA,WAAW;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}