{"ast":null,"code":"var _jsxFileName = \"/Users/krupachovatiya/Desktop/React-Project/react/my_app/src/PutAPI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PutAPI = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  // Fetch all posts when the component mounts\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(data => setPosts(data));\n  }, []);\n\n  // Function to handle post selection for updating\n  const handleEdit = post => {\n    setSelectedPost(post);\n    setTitle(post.title);\n    setBody(post.body);\n  };\n\n  // Function to update the post\n  const updatePost = () => {\n    if (!selectedPost) return;\n    const updatedData = {\n      ...selectedPost,\n      title,\n      body\n    };\n    fetch(`https://jsonplaceholder.typicode.com/posts/${selectedPost.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedData)\n    }).then(response => response.json()).then(data => {\n      setPosts(posts.map(post => post.id === data.id ? data : post));\n      setSelectedPost(null); // Clear selection after update\n      setTitle(\"\");\n      setBody(\"\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post =>\n      /*#__PURE__*/\n      // Displaying only first 10 posts\n      _jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Body: \", post.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(post),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: body,\n        onChange: e => setBody(e.target.value),\n        placeholder: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updatePost,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PutAPI, \"AnLEjdCFH9FASc/Sa+d8iQcbkKU=\");\n_c = PutAPI;\nexport default PutAPI;\nvar _c;\n$RefreshReg$(_c, \"PutAPI\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PutAPI","_s","posts","setPosts","selectedPost","setSelectedPost","title","setTitle","body","setBody","fetch","then","response","json","data","handleEdit","post","updatePost","updatedData","id","method","headers","JSON","stringify","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/krupachovatiya/Desktop/React-Project/react/my_app/src/PutAPI.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst PutAPI = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  // Fetch all posts when the component mounts\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((response) => response.json())\n      .then((data) => setPosts(data));\n  }, []);\n\n  // Function to handle post selection for updating\n  const handleEdit = (post) => {\n    setSelectedPost(post);\n    setTitle(post.title);\n    setBody(post.body);\n  };\n\n  // Function to update the post\n  const updatePost = () => {\n    if (!selectedPost) return;\n\n    const updatedData = {\n      ...selectedPost,\n      title,\n      body,\n    };\n\n    fetch(`https://jsonplaceholder.typicode.com/posts/${selectedPost.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setPosts(posts.map((post) => (post.id === data.id ? data : post)));\n        setSelectedPost(null); // Clear selection after update\n        setTitle(\"\");\n        setBody(\"\");\n      });\n  };\n\n  return (\n    <div>\n      <h2>All Posts</h2>\n      <ul>\n        {posts.map((post) => ( // Displaying only first 10 posts\n          <li key={post.id}>\n            <p>Title: {post.title}</p>\n            <p>Body: {post.body}</p>\n            <button onClick={() => handleEdit(post)}>\n              Update\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      {selectedPost && (\n        <div>\n          <h3>Edit Post</h3>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Title\"\n          />\n          <br />\n          <textarea\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n            placeholder=\"Body\"\n          />\n          <br />\n          <button onClick={updatePost}>Save</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PutAPI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}